[{"C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\config.js":"1","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\index.js":"2","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\Header\\header.jsx":"3","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\PlayScreen\\playScreen.jsx":"4","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\MostPopular\\popularVideoList.jsx":"5","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\Sidebar\\sidebar.jsx":"6","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\SearchVideoList\\searchVideoList.jsx":"7","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\Header\\SearchForm\\searchForm.jsx":"8","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\Recommendation\\rcmVideoList.jsx":"9","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\MostPopular\\PopularVideo\\popularVideo.jsx":"10","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\app.jsx":"11","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\Recommendation\\RcmVideo\\rcmVideo.jsx":"12","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\SearchVideoList\\SearchVideo\\searchVideo.jsx":"13"},{"size":4160,"mtime":1614734836744,"results":"14","hashOfConfig":"15"},{"size":219,"mtime":1614664109127,"results":"16","hashOfConfig":"15"},{"size":1283,"mtime":1614321240811,"results":"17","hashOfConfig":"15"},{"size":5000,"mtime":1614736363227,"results":"18","hashOfConfig":"15"},{"size":1128,"mtime":1614670240247,"results":"19","hashOfConfig":"15"},{"size":935,"mtime":1613622607327,"results":"20","hashOfConfig":"15"},{"size":1507,"mtime":1614689735990,"results":"21","hashOfConfig":"15"},{"size":899,"mtime":1614215203156,"results":"22","hashOfConfig":"15"},{"size":1063,"mtime":1614320301666,"results":"23","hashOfConfig":"15"},{"size":2511,"mtime":1614670160754,"results":"24","hashOfConfig":"15"},{"size":2205,"mtime":1614692089972,"results":"25","hashOfConfig":"15"},{"size":2571,"mtime":1614670179588,"results":"26","hashOfConfig":"15"},{"size":2883,"mtime":1614734500532,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"30"},"8o123s",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},"C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\config.js",["59"],"import dotenv from \"dotenv\";\r\n\r\nexport const PAGES = {\r\n    mostPopular: 'mostPopular',\r\n    searchPage: 'searchPage',\r\n    playPage: 'playPage'\r\n}\r\n\r\nconst requestOptions = {\r\n    method: 'GET',\r\n    redirect: 'follow'\r\n};\r\n\r\ndotenv.config();\r\nconst api_key = process.env.REACT_APP_YOUTUBE_API_KEY1;\r\n\r\nexport async function getMostPopular(callback) {\r\n    const url = `https://www.googleapis.com/youtube/v3/videos?part=snippet,statistics&chart=mostPopular&maxResults=24&key=${api_key}`;\r\n    fetch(url, requestOptions)\r\n        .then(response => response.json())\r\n        .then(json => callback(json.items))\r\n        .catch(error => console.log('error', error));\r\n}\r\n\r\nexport async function getSearchResult(callback, query) {\r\n    const url = `https://www.googleapis.com/youtube/v3/search?part=snippet,id&type=video&maxResults=10&q=${query}&key=${api_key}`;\r\n    fetch(url, requestOptions)\r\n        .then(response => response.json())\r\n        .then(json => callback(json.items))\r\n        .catch(error => console.log('error', error));\r\n}\r\n\r\nexport async function getRcmData(callback, videoId) {\r\n    const url = `https://www.googleapis.com/youtube/v3/search?&part=snippet&type=video&relatedVideoId=${videoId}&maxResults=6&key=${api_key}`;\r\n    fetch(url, requestOptions)\r\n        .then(response => response.json())\r\n        .then(json => callback(json.items))\r\n        .catch(error => console.log('error', error));\r\n}\r\n\r\nexport async function fetchVideoData(videoId, callback) {\r\n    const url = `https://www.googleapis.com/youtube/v3/videos?part=snippet,statistics&id=${videoId}&key=${api_key}`;\r\n    await fetch(url, requestOptions)\r\n        .then(response => response.json())\r\n        .then(json => callback(json.items[0]))\r\n        .catch(error => console.log('error', error));\r\n}\r\nexport async function fetchChannelData(channelId, callback) {\r\n    const url = `https://www.googleapis.com/youtube/v3/channels?part=snippet,statistics&id=${channelId}&key=${api_key}`;\r\n    await fetch(url, requestOptions)\r\n        .then(response => response.json())\r\n        .then(json => callback(json.items[0]))\r\n        .catch(error => console.log('error', error));\r\n}\r\n//----------------------- Common functions ------------------------------------\r\nexport function countConverter(count) {\r\n    let result;\r\n    if (count < 1000) {\r\n        result = count;\r\n    } else if (count < 10000) {\r\n        const num = count / 1000;\r\n        result = `${num.toFixed(1)}천`;\r\n    } else if (count < 100000) {\r\n        const num = count / 10000;\r\n        result = `${num.toFixed(1)}만`;\r\n    } else if (count < 100000000) {\r\n        result = `${Math.floor(count / 10000)}만`;\r\n    } else {\r\n        result = `${Math.floor(count / 100000000)}억`;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function agoConverter(dateString) {\r\n    const publishedDate = new Date(dateString);\r\n    const currentDate = new Date;\r\n    const seconds = (currentDate.getTime() - publishedDate.getTime()) / 1000;\r\n    let result;\r\n    if (seconds < 60) {\r\n        result = `${seconds}초 전`;\r\n    } else if (seconds < 3600) {\r\n        result = `${Math.floor(seconds / 60)}분 전`;\r\n    } else if (seconds < 86400) {\r\n        result = `${Math.floor(seconds / 3600)}시간 전`;\r\n    } else if (seconds < 604800) {\r\n        result = `${Math.floor(seconds / 86400)}일 전`;\r\n    } else if (seconds < 2592000) {\r\n        result = `${Math.floor(seconds / 604800)}주 전`;\r\n    } else if (seconds < 31536000) {\r\n        result = `${Math.floor(seconds / 2592000)}달 전`;\r\n    } else {\r\n        result = `${Math.floor(seconds / 31536000)}년 전`;\r\n    }\r\n    return result;\r\n}\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\nexport function dateConverter(publishedAt) {\r\n    const before = new Date(publishedAt);\r\n    const year = before.getFullYear();\r\n    const month = before.getMonth();\r\n    const date = before.getDate();\r\n    return `${year}. ${month}. ${date}.`;\r\n}\r\nexport function tagMaker(tags) {\r\n    let result = '';\r\n    let i = 0;\r\n    while (i < 3) {\r\n        result += `#${tags[i]} `;\r\n        i++;\r\n    }\r\n    return result;\r\n}","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\index.js",[],["60","61"],"C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\Header\\header.jsx",["62"],"import React from 'react';\r\nimport styles from './header.module.css';\r\nimport SearchForm from './SearchForm/searchForm';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={styles.header}>\r\n            <div className={styles.start}>\r\n                <button className={styles.menuBtn}>\r\n                    <i className=\"fas fa-bars\"></i>\r\n                </button>\r\n                <a className={styles.logo} href='#' onClick={props.onLogoClick}>\r\n                    <img className={styles.logoImage} src=\"/images/logo.png\" alt=\"logo\" />\r\n                    <h4 className={styles.logoTitle}>Youtube</h4>\r\n                </a>\r\n            </div>\r\n            <div className={styles.center}>\r\n                <SearchForm handleSearch={props.youtubeSearch} />\r\n                <button className={styles.btn}><i className=\"fas fa-microphone\"></i></button>\r\n            </div>\r\n            <div className={styles.end}>\r\n                <button className={styles.btn}><i className=\"fas fa-plus-square\"></i></button>\r\n                <button className={styles.btn}><i className=\"fas fa-th\"></i></button>\r\n                <button className={styles.btn}><i className=\"fas fa-bell\"></i></button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\PlayScreen\\playScreen.jsx",["63"],"C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\MostPopular\\popularVideoList.jsx",[],"C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\Sidebar\\sidebar.jsx",[],"C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\SearchVideoList\\searchVideoList.jsx",[],"C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\Header\\SearchForm\\searchForm.jsx",[],"C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\Recommendation\\rcmVideoList.jsx",[],"C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\MostPopular\\PopularVideo\\popularVideo.jsx",["64","65"],"import React, { Component } from 'react';\r\nimport styles from '../PopularVideo/popularVideo.module.css';\r\nimport * as config from '../../../config';\r\nclass PopularVideo extends Component {\r\n    state = {\r\n        datas: {\r\n            videoId: this.props.data.id,\r\n            channelId: this.props.data.snippet.channelId,\r\n            channelName: this.props.data.snippet.channelTitle,\r\n            channelImg: '',\r\n            description: this.props.data.snippet.description,\r\n            videoTitle: this.props.data.snippet.title,\r\n            date: this.props.data.snippet.publishedAt,\r\n            videoThumbnail: this.props.data.snippet.thumbnails.standard.url,\r\n            viewCount: this.props.data.statistics.viewCount,\r\n            subscriber: '',\r\n            like: this.props.data.statistics.likeCount,\r\n            dislike: this.props.data.statistics.dislikeCount,\r\n            comment: this.props.data.statistics.commentCount,\r\n            tags: this.props.data.snippet.tags,\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        config.fetchChannelData(this.state.datas.channelId, this.setChannelInfo)\r\n    }\r\n    setChannelInfo = (data) => {\r\n        const datas = {\r\n            ...this.state.datas,\r\n            channelImg: data.snippet.thumbnails.default.url,\r\n            subscriber: data.statistics.subscriberCount\r\n        }\r\n        this.setState({ datas });\r\n    }\r\n    handlePlay = () => {\r\n        const playData = { ...this.state.datas };\r\n        this.props.onClickVideo(playData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.video} onClick={this.handlePlay}>\r\n                <img src={this.state.datas.videoThumbnail} className={styles.videoThumbnail}></img>\r\n                <div className={styles.description}>\r\n                    <img src={this.state.datas.channelImg} className={styles.channelImg} />\r\n                    <div className={styles.infoBox}>\r\n                        <p className={styles.videoTitle}>{this.state.datas.videoTitle}</p>\r\n                        <p className={styles.channelName}>{this.state.datas.channelName}</p>\r\n                        <p className={styles.viewCountAndDate}>{`${config.countConverter(this.state.datas.viewCount)}회`}\r\n                            <span className={styles.date}>{config.agoConverter(this.state.datas.date)}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopularVideo;\r\n","C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\app.jsx",[],"C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\Recommendation\\RcmVideo\\rcmVideo.jsx",[],"C:\\Users\\y\\Desktop\\Projects\\react-basic\\youtube-demo\\src\\components\\SearchVideoList\\SearchVideo\\searchVideo.jsx",["66"],"import React, { Component } from 'react';\r\nimport styles from '../SearchVideo/searchVideo.module.css';\r\nimport * as config from '../../../config';\r\n\r\nlet datas = {};\r\nclass SearchVideo extends Component {\r\n    state = {\r\n        datas: {\r\n            videoId: this.props.data.id.videoId,\r\n            channelId: this.props.data.snippet.channelId,\r\n            channelName: this.props.data.snippet.channelTitle,\r\n            channelImg: '',\r\n            description: this.props.data.snippet.description,\r\n            videoTitle: this.props.data.snippet.title,\r\n            date: this.props.data.snippet.publishTime,\r\n            videoThumbnail: this.props.data.snippet.thumbnails.high.url,\r\n            viewCount: '',\r\n            subscriber: '',\r\n            like: '',\r\n            dislike: '',\r\n            comment: '',\r\n            tags: '',\r\n        },\r\n        input: this.props.input\r\n\r\n    }\r\n    componentDidMount() {\r\n        config.fetchVideoData(this.state.datas.videoId, this.setVideoInfo);\r\n        config.fetchChannelData(this.state.datas.channelId, this.setChannelInfo);\r\n    }\r\n    setVideoInfo = (data) => {\r\n        datas = {\r\n            ...this.state.datas,\r\n            viewCount: data.statistics.viewCount,\r\n            like: data.statistics.likeCount,\r\n            dislike: data.statistics.dislikeCount,\r\n            comment: data.statistics.commentCount,\r\n            tags: data.snippet.tags,\r\n        }\r\n    }\r\n    setChannelInfo = (data) => {\r\n        datas = {\r\n            ...datas,\r\n            channelImg: data.snippet.thumbnails.default.url,\r\n            subscriber: data.statistics.subscriberCount\r\n        }\r\n        this.setState({ datas });\r\n    }\r\n    handlePlay = () => {\r\n        const playData = { ...this.state.datas };\r\n        this.props.onClickVideo(playData);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={styles.video} onClick={this.handlePlay}>\r\n                <img src={this.state.datas.videoThumbnail} className={styles.videoThumbnail}></img>\r\n                <div className={styles.infoBox}>\r\n                    <p className={styles.videoTitle}>{this.state.datas.videoTitle}</p>\r\n                    <p className={styles.viewCountAndDate}>{`${config.countConverter(this.state.datas.viewCount)}회`}\r\n                        <span className={styles.date}>{config.agoConverter(this.state.datas.date)}</span>\r\n                    </p>\r\n                    <div className={styles.channel}>\r\n                        <img src={this.state.datas.channelImg} alt=\"channel\" className={styles.channelImg} />\r\n                        <p className={styles.channelName}>{this.state.datas.channelName}</p>\r\n                    </div>\r\n                    <p className={styles.description}>{this.state.datas.description}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchVideo;\r\n\r\n",{"ruleId":"67","severity":1,"message":"68","line":76,"column":25,"nodeType":"69","messageId":"70","endLine":76,"endColumn":33,"fix":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":12,"column":17,"nodeType":"78","endLine":12,"endColumn":81},{"ruleId":"79","severity":1,"message":"80","line":31,"column":25,"nodeType":"78","endLine":35,"endColumn":45},{"ruleId":"81","severity":1,"message":"82","line":42,"column":17,"nodeType":"78","endLine":42,"endColumn":94},{"ruleId":"81","severity":1,"message":"82","line":44,"column":21,"nodeType":"78","endLine":44,"endColumn":92},{"ruleId":"81","severity":1,"message":"82","line":56,"column":17,"nodeType":"78","endLine":56,"endColumn":94},"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"83","text":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",[2881,2881],"()","no-global-assign","no-unsafe-negation"]